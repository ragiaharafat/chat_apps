version: "3.7"

services:
  db:
    image: "mysql:8.0.36"
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USERNAME: root
      MYSQL_PASSWORD: root
        - '3306:3306'
    expose:
      - '3306'
    volumes:
      - db:/var/run/mysqld
    ports:
      - "33061:3306"
    healthcheck:
        test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]

  # elasticsearch:
  #   image: docker.elastic.co/elasticsearch/elasticsearch:8.10.0
  #   container_name: elasticsearch_test
  #   environment:
  #     discovery.type: single-node
  #     ES_JAVA_OPTS: "-Xms512m -Xmx512m"
  #   ports:
  #     - "9200:9200"
  #   volumes:
  #     - es_data:/usr/share/elasticsearch/data
  redis:
    image: redis:7.0.2-bullseye
    command: redis-server
    volumes:
      - redis:/data
    ports:
      - '6379:6379'
    logging:
      driver: none
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]
      timeout: 5s
      retries: 10

  sidekiq:
    build: ./
    command: bundle exec sidekiq
    restart: always
    volumes:
      - ./:/workspace
    environment:
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_NAME: chatting_app_development
      DB_PORT: 3306
      DB_HOST: db
      RAILS_ENV: development
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: "redis://redis:6379/0"
    depends_on:
      - db
      - redis

  web:
    build: .
    command: "./bin/rails server --binding 0.0.0.0"
    restart: always
    environment:
      DB_USERNAME: root
      DB_PASSWORD: root
      DB_NAME: chat_apps_v6_development
      DB_PORT: 3306
      DB_HOST: db
      RAILS_ENV: development
      RAILS_MAX_THREADS: 5
      REDIS_HOST: redis
      REDIS_PORT: 6379
      REDIS_URL: "redis://redis:6379/0"
    volumes:
      - .:/workspace
      - bundle:/bundle
    ports:
      - "3000:3000"
    depends_on:
      - db
      - redis
volumes:
  db:
  bundle:
  redis:
